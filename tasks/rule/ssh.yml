---

# checking if ssh port is/will be opened

- name: UFW | SSH-Rule | Setting defaults
  set_fact:
    add_ssh_rule: false
    ssh_port: "{{ ansible_port | default('22') }}"

- name: UFW | SSH-Rule | Checking configured ssh port
  shell: "cat /etc/ssh/sshd_config | grep -e '^Port' | cut -d' ' -f2"
  register: configured_ssh_port
  changed_when: false

- name: UFW | SSH-Rule | Setting configured default port
  set_fact:
    configured_ssh_port:
      stdout: '22'
  when: configured_ssh_port.stdout == ''

- name: UFW | SSH-Rule | Configured ssh port does not match current one
  pause:
    prompt: "The configured ssh port '{{ configured_ssh_port.stdout }}' does not match the current ssh port '{{ ssh_port }}' -
    do you want to allow the connection for both ports? (YES/no)"
  register: ssh_rule_both_ports
  when: configured_ssh_port.stdout != ssh_port

- name: UFW | SSH-Rule | Updating ssh port(s)
  set_fact:
    ssh_port: "{{ ssh_port }},{{ configured_ssh_port.stdout }}"
    add_ssh_rule: true
  when:
    - ssh_rule_both_ports.user_input is defined
    - ssh_rule_both_ports.user_input in ['y', 'yes', 'Y', 'YES']

- name: UFW | SSH-Rule | Checking if ssh port will be open
  set_fact:
    add_ssh_rule: false
  when:
    - not add_ssh_rule
    - item.value.port is defined
    - item.value.port|int == ssh_port|int
    - item.value.proto is undefined or item.value.proto == 'tcp'
    - item.value.rule is undefined or item.value.rule == 'allow'
    - item.value.direction is undefined or item.value.direction == 'in'
  with_dict: "{{ ufw_rules }}"

- name: UFW | SSH-Rule | Adding ssh rule
  include_tasks: rule/main.yml
  args:
    apply:
      vars:
        rule:
          key: 'default_ssh'
          value:
            proto: 'tcp'
            port: "{{ ssh_port }}"
            rule: 'limit'  # ddos prevention
        delete_rule: false
  when: add_ssh_rule
